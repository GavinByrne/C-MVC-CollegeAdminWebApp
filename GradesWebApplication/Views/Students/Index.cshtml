@*@model IEnumerable<GradesWebApplication.Models.Student>*@
@*@model IEnumerable< GradesWebApplication.ViewModels.StudentViewModel>*@

@model PagedList.IPagedList<GradesWebApplication.Models.Student>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Students";
}

<h2>Students</h2>

<p>
    @Html.ActionLink("Create New Student", "Create")
</p>

@*@using (Html.BeginForm("Index", "Students", FormMethod.Get))
{
    <p>
        Find by ID: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}*@

@using (Html.BeginForm("Index", "Students", FormMethod.Get))
{
    //the following are search options
    <b> Search Option:  </b>@Html.RadioButton("option", "StudentID", true) <text> Student ID </text> @Html.RadioButton("option", "FirstName") <text> First Name </text>
    @Html.RadioButton("option", "LastName")<text> Last Name </text> @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
    <input type="submit" value="Search" />
}

<br />


<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Student ID", "Index", new { sortOrder = ViewBag.studentidSortParm, currentFilter = ViewBag.CurrentFilter })
            @*@Html.DisplayNameFor(model => model.StudentID)*@
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.firstnameSortParm, currentFilter = ViewBag.CurrentFilter })
            @*@Html.DisplayNameFor(model => model.FirstName)*@
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.lastnameSortParm, currentFilter = ViewBag.CurrentFilter })
            @*@Html.DisplayNameFor(model => model.LastName)*@
        </th>
        <th>
            @Html.ActionLink("Date Of Birth ", "Index", new { sortOrder = ViewBag.dobSortParm, currentFilter = ViewBag.CurrentFilter })
            @*@Html.DisplayNameFor(model => model.DateOfBirth)*@
        </th>
        <th>
            @Html.ActionLink("Address", "Index", new { sortOrder = ViewBag.addressSortParm, currentFilter = ViewBag.CurrentFilter })
            @*@Html.DisplayNameFor(model => model.Address)*@
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.DateEntered)
        </th>*@
        <th></th>
    </tr>

@if (Model.Count() == 0) {<tr> <td colspan = "3" >No records found.</td>
</tr > }

else
{

foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.StudentID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateOfBirth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Address)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.DateEntered)
        </td>*@
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.StudentID }) |
            @Html.ActionLink("Details", "Details", new { id = item.StudentID }) |
            @Html.ActionLink("Save Report", "StudentCSV", "Download", new { studentid = item.StudentID }, null) 
            @*@Html.ActionLink("Delete", "Delete", new { id=item.StudentID })*@
        </td>
    </tr>
   }
}

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
